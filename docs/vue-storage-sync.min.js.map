{"version":3,"file":"vue-storage-sync.min.js","sources":["../src/index.js"],"sourcesContent":["/* eslint no-undef: 'off' */\n/**\n * @module VueStorageSync\n * @description A plugin to sync vue data to a storage system\n */\n\n/**\n * @prop pluginDefaultOptions\n * @desc Stores plugin default options\n * @type Object\n */\nconst pluginDefaultOptions = {\n  key: 'vue-data-sync',\n  duration: 0,\n  storage: 'local',\n};\n\n/**\n * @func storageSystems\n * @desc Plugin storage systems supported\n * @type {Array}\n */\nconst storageSystems = {\n  local: {\n    set(key, value) {\n      return window.localStorage.setItem(key, value);\n    },\n    get(key) {\n      return window.localStorage.getItem(key);\n    },\n    remove(key) {\n      return window.localStorage.removeItem(key);\n    },\n  },\n  session: {\n    set(key, value) {\n      return window.sessionStorage.setItem(key, value);\n    },\n    get(key) {\n      return window.sessionStorage.getItem(key);\n    },\n    remove(key) {\n      return window.sessionStorage.removeItem(key);\n    },\n  },\n};\n\n/**\n * @func getOptions\n * @desc get current options\n * @return Object\n */\nconst getOptions = function (options) {\n  // Plugin instance default options\n  const defaultOptions = Object.assign(\n    {},\n    VueStorageSync.pluginDefaultOptions,\n    VueStorageSync.userDefaultOptions,\n  );\n\n  // For array like settings\n  if (Array.isArray(options)) {\n    defaultOptions.entries = options;\n    return [defaultOptions];\n  }\n\n  // Check multiple storage systems\n  const isMultipleStorage = Object.keys(options).some(key => Object.keys(storageSystems).includes(key));\n\n  if (isMultipleStorage) {\n    // eslint-disable-next-line array-callback-return, consistent-return\n    return Object.keys(storageSystems).map((system) => {\n      if (options[system] != null) {\n        return Object.assign({}, defaultOptions, options[system], { storage: system });\n      }\n    });\n  }\n\n  // Single storage system\n  return [Object.assign({}, defaultOptions, options)];\n};\n\n/**\n * @func isExpired\n * @desc Check if a time is minor tha now\n * @return Boolean\n */\nconst isExpired = (time) => {\n  time = Number.parseInt(time, 10);\n  if (time === 0) return false;\n  return time < new Date().getTime() / 1000;\n};\n\n/**\n * @func getData\n * @desc Retrieves a data object\n * @return Object|null\n */\nconst getData = function (options) {\n  const store = storageSystems[options.storage];\n  const storedObject = JSON.parse(store.get(options.key));\n\n  if (!storedObject) return {};\n  if (isExpired(storedObject.expires)) {\n    store.remove(options.key);\n    return {};\n  }\n  return storedObject.data;\n};\n\n/**\n * @func getData\n * @desc Retrieves a data object\n * @return Object|null\n */\nconst setData = function (prop, value, options) {\n  const store = storageSystems[options.storage];\n  const data = getData(options);\n  data[prop] = value;\n  const expires = options.duration > 0 ? options.duration + new Date().getTime() / 1000 : 0;\n  const newData = { data, expires };\n  return store.set(options.key, JSON.stringify(newData));\n};\n\n/**\n * @func storageSync\n * @desc main sync function\n */\nconst storageSync = function (options) {\n  // Get current options\n  options = getOptions(options);\n  // Each storage\n  options.forEach((option) => {\n    const storedData = getData(option);\n    if (storedData) {\n      Object.keys(storedData).forEach((item) => {\n        this[item] = storedData[item];\n      });\n    }\n    // Register watchers\n    option.entries.forEach((prop) => {\n      this.$watch(\n        prop,\n        // eslint-disable-next-line prefer-arrow-callback\n        function (value) {\n          setData(prop, value, option);\n        },\n        {\n          deep: true,\n        },\n      );\n    });\n  });\n};\n\n/**\n * @func onBeforeCreate\n * @desc Mixin function for beforeCreate hook\n */\nconst onBeforeCreate = function () {\n  this.$storageSync = storageSync;\n};\n\n/**\n * @func onMounted\n * @desc Mixin function for beforeCreate hook\n */\nconst onMounted = function () {\n  const { storage } = this.$options;\n  if (storage) this.$storageSync(storage);\n};\n\n/**\n * @func install\n * @desc Install the plugin\n * @param {Vue} Vue the vuejs object\n * @param {Object} userDefaultOptions Options object\n */\nconst install = function (Vue, userDefaultOptions = {}) {\n  // Get default options\n  this.pluginDefaultOptions = pluginDefaultOptions;\n  this.userDefaultOptions = userDefaultOptions;\n  // Set the mixin\n  Vue.mixin({\n    beforeCreate: onBeforeCreate,\n    mounted: onMounted,\n  });\n};\n\n/**\n * @exports VueStorageSync\n * @type {Object}\n * @desc Object module\n */\nexport default {\n  install,\n};\n"],"names":["pluginDefaultOptions","key","duration","storage","storageSystems","local","set","value","window","localStorage","setItem","get","getItem","remove","removeItem","session","sessionStorage","getData","options","time","store","storedObject","JSON","parse","expires","Number","parseInt","Date","getTime","data","storageSync","defaultOptions","Object","assign","VueStorageSync","userDefaultOptions","Array","isArray","entries","keys","some","includes","map","system","getOptions","forEach","option","storedData","item","_this","prop","$watch","newData","stringify","setData","deep","onBeforeCreate","$storageSync","onMounted","this","$options","install","Vue","mixin","beforeCreate","mounted"],"mappings":";;;;;0LAWA,IAAMA,GACJC,IAAK,gBACLC,SAAU,EACVC,QAAS,SAQLC,GACJC,OACEC,aAAIL,EAAKM,UACAC,OAAOC,aAAaC,QAAQT,EAAKM,IAE1CI,aAAIV,UACKO,OAAOC,aAAaG,QAAQX,IAErCY,gBAAOZ,UACEO,OAAOC,aAAaK,WAAWb,KAG1Cc,SACET,aAAIL,EAAKM,UACAC,OAAOQ,eAAeN,QAAQT,EAAKM,IAE5CI,aAAIV,UACKO,OAAOQ,eAAeJ,QAAQX,IAEvCY,gBAAOZ,UACEO,OAAOQ,eAAeF,WAAWb,MAwDxCgB,EAAU,SAAUC,OAXPC,EAYXC,EAAQhB,EAAec,EAAQf,SAC/BkB,EAAeC,KAAKC,MAAMH,EAAMT,IAAIO,EAAQjB,aAE7CoB,GAfYF,EAgBHE,EAAaG,QAdd,KADbL,EAAOM,OAAOC,SAASP,EAAM,MAEtBA,GAAO,IAAIQ,MAAOC,UAAY,KAcnCR,EAAMP,OAAOK,EAAQjB,SAGhBoB,EAAaQ,UAqBhBC,EAAc,SAAUZ,eAE5BA,EA9EiB,SAAUA,OAErBa,EAAiBC,OAAOC,UAE5BC,eAAelC,qBACfkC,eAAeC,2BAIbC,MAAMC,QAAQnB,IAChBa,EAAeO,QAAUpB,GACjBa,IAIgBC,OAAOO,KAAKrB,GAASsB,KAAK,SAAAvC,UAAO+B,OAAOO,KAAKnC,GAAgBqC,SAASxC,KAIvF+B,OAAOO,KAAKnC,GAAgBsC,IAAI,SAACC,MACf,MAAnBzB,EAAQyB,UACHX,OAAOC,UAAWF,EAAgBb,EAAQyB,IAAWxC,QAASwC,OAMnEX,OAAOC,UAAWF,EAAgBb,IAmDhC0B,CAAW1B,IAEb2B,QAAQ,SAACC,OACTC,EAAa9B,EAAQ6B,GACvBC,GACFf,OAAOO,KAAKQ,GAAYF,QAAQ,SAACG,GAC/BC,EAAKD,GAAQD,EAAWC,KAI5BF,EAAOR,QAAQO,QAAQ,SAACK,GACtBD,EAAKE,OACHD,WAEU3C,IA7BF,SAAU2C,EAAM3C,EAAOW,OAC/BE,EAAQhB,EAAec,EAAQf,SAC/B0B,EAAOZ,EAAQC,GACrBW,EAAKqB,GAAQ3C,MAEP6C,GAAYvB,KAAAA,EAAML,QADRN,EAAQhB,SAAW,EAAIgB,EAAQhB,UAAW,IAAIyB,MAAOC,UAAY,IAAO,GAEjFR,EAAMd,IAAIY,EAAQjB,IAAKqB,KAAK+B,UAAUD,IAwBrCE,CAAQJ,EAAM3C,EAAOuC,KAGrBS,MAAM,SAWVC,EAAiB,gBAChBC,aAAe3B,GAOhB4B,EAAY,eACRvD,EAAYwD,KAAKC,SAAjBzD,QACJA,GAASwD,KAAKF,aAAatD,WA0B/B0D,QAjBc,SAAUC,OAAK3B,iEAExBnC,qBAAuBA,OACvBmC,mBAAqBA,EAE1B2B,EAAIC,OACFC,aAAcR,EACdS,QAASP"}